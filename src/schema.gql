# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ListItem {
  id: ID!
  quantity: Float!
  completed: Boolean!
  list: List!
  item: Item!
}

type List {
  """ID de la lista"""
  id: ID!

  """Nombre de la lista"""
  listname: String!

  """Usuario al que pertenece la lista"""
  user: User!
  items(offset: Int = 0, limit: Int = 10, search: String): [ListItem!]!
  totalItems: Int!
}

type User {
  """Campo que hace referencia al ID del usuario"""
  id: ID!

  """Campo que hace referencia al nombre completo del usuario"""
  fullname: String!

  """Campo que hace referencia al correo del usuario"""
  email: String!

  """Campo que hace referencia al rol del usuario"""
  roles: [String!]!

  """Campo que hace referencia al estado del usuario"""
  is_active: Boolean!
  last_update_by: User
  itemCount: Int!
  items(offset: Int = 0, limit: Int = 10, search: String): [Item!]!
  listas(offset: Int = 0, limit: Int = 10, search: String): [List!]!
  listCount: Int!
}

type Item {
  """Campo que hace referencia al ID del producto"""
  id: ID!

  """Campo que hace referencia al nombre del producto"""
  name: String!

  """Campo que hace referencia a la unidad de medida"""
  quantityUnits: String
  user: User!
  listItem: [ListItem!]!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  items(offset: Int = 0, limit: Int = 10, search: String): [Item!]!
  item(id: ID!): Item!
  users(roles: [ValidRolesEnum!] = [], offset: Int = 0, limit: Int = 10, search: String): [User!]!
  user(id: ID!): User!
  lists(offset: Int = 0, limit: Int = 10, search: String): [List!]!
  oneList(id: ID!): List!
  listItem(id: ID!): ListItem!
  revalite: AuthResponse!
}

enum ValidRolesEnum {
  admin
  user
  super_user
}

type Mutation {
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  removeItem(id: ID!): Item!
  UpdateUser(updateUserInput: UpdateUserInput!): User!
  blockUser(id: ID!): User!
  createList(createListInput: CreateListInput!): List!
  updateList(updateListInput: UpdateListInput!): List!
  removeList(id: ID!): List!
  createListItem(createListItemInput: CreateListItemInput!): ListItem!
  updateListItem(updateListItemInput: UpdateListItemInput!): ListItem!
  signup(signupInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!

  """Ejecuta la construccion de la base de datos"""
  executeSeed: Boolean!
}

input CreateItemInput {
  """Campo que hace referencia al nombre del producto"""
  name: String!

  """Campo que hace referencia a la cantidad de unidades"""
  quantityUnits: String
}

input UpdateItemInput {
  """Campo que hace referencia al nombre del producto"""
  name: String

  """Campo que hace referencia a la cantidad de unidades"""
  quantityUnits: String
  id: ID!
}

input UpdateUserInput {
  email: String
  fullname: String
  password: String
  id: ID!
  roles: [ValidRolesEnum!]
  is_active: Boolean
}

input CreateListInput {
  """Nombre de la lista"""
  listname: String!
}

input UpdateListInput {
  """Nombre de la lista"""
  listname: String
  id: ID!
}

input CreateListItemInput {
  quantity: Float = 0
  completed: Boolean = false
  listId: ID!
  itemId: ID!
}

input UpdateListItemInput {
  quantity: Float = 0
  completed: Boolean = false
  listId: ID
  itemId: ID
  id: ID!
}

input SignupInput {
  email: String!
  fullname: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}